### DART-ID configuration
### =========================

verbose: true

## Input
## ==========================

# List the input files here, or define them on the command line
# when running the tool.
# for example, dart_id -i /path/to/input1.txt /path/to/input2.txt
input:
  - /path/to/dat/PS061A/evidence.txt
  - /path/to/dat/PS062ABCD/evidence.txt
  - /path/to/dat/PS063/evidence.txt
  - /path/to/dat/PS064AG/evidence.txt

# Filter out entire raw files, especially if they are of a different run-time,
# or if the LC for that experiment was problematic. The "expr" field is a regular
# expression that will be checked against all raw files in the input.
exclude: PS06[1-3][AB]|PS064F

# The input data is loaded in with pandas, and it doesn't like
# some columns being mostly empty. This needs to be set to false 
# for input formats like MaxQuant.
low_memory: false

# Instead of running a new STAN alignment, use a set of parameters
# from a previous run. The folder needs to include the three files
# outputted from a run with the "save_params" option on, and this run
# needs to be run with the exact same filters as that previous run.
# (exp_params.txt, peptide_params.txt, pair_params.txt)
params_folder: /path/to/output_folder_from_prev_run

## Output
## ==========================

# Folder to output to. The updated evidence file, as well as the
# optional parameters files and figures will be deposited here
# this can also be specified on the command line. e.g.:
# -o /path/to/output/folder
output: /path/to/output/folder

# Print diagnostic figures, as well as an HTML file that allows
# for quick browsing
print_figures: true

# Save the parameters outputted by STAN into three text files.
# Use the "params_folder" option in a future run to use these
# parameters instead of running the alignment procedure again.
save_params: true

# Default behavior is to only append two columns, the new PEP
# and the updated PEP. Set this to true to get many more columns
# added on.
add_diagnostic_cols: true

# Overwrite the original PEP column with the updated PEP, and save
# the original PEP to the 'Spectra PEP' column.
# Useful for workflows that rely on the PEP column
overwrite_pep: true

# If providing multiple input files, combine them all into one
# tabular file and save it.
save_combined_output: true
# The name of the combined output file.
combined_output_name: ev_updated.txt

# If providing separate input files, then save the output files separately
# as well. This can be used in conjunction with 'save_combined_output'
save_separate_output: true
# Save the separate output files into the same folder where they originally
# came from. **WARNING** this program does not check to see if it will overwrite
# an existing file. Please choose the options below carefully to avoid overwriting
# your original data!
save_in_input_folder: true
# The suffix and extension of each of the separate output files. 
# For example, if one of the inputs was "evidence.txt", 
# the output would be "evidence_updated.txt"
output_suffix: _updated
output_ext: .txt

# Save logging messages to file?
log_file: true

## Alignment Options
## ==========================

# Which alignment model to use
# Options: 'linear', 'two_piece_linear'
model: 'two_piece_linear'

# Number of iterations to run when generating priors
# If the average error when generating priors is too high,
# or prohibitive for STAN, then increase these to get more accurate priors
prior_iters: 10

# Number of iterations to run for STAN. If STAN is consistently hitting
# its iteration limit without reaching an optima it is happy with,
# then increase this number
stan_iters: 20000

# Sometimes STAN will error out due to bad RNG. This is the number of attempts
# that will be made to run STAN with the same set of data and priors generated.
stan_attempts: 3

## Advanced Alignment Options

# Minimum value for mu, a canonical retention time (RT) for a peptide
mu_min: 1

# Amount to distort RTs when calculating priors. If STAN is erroring out
# because the priors are already too close to the optima, then consider
# slowly increasing this value to give STAN more room to iterate.
rt_distortion: 0


## Input Type Options
## ==========================

# column names of the input file
# as of now all input files have to be the same format
# change these as the input file changes,
# e.g., when a different search engine or search engine configuration is used
col_names:

  # these four columns are required. the library will not work without them
  # sequence can be the amino-acid sequence, or the modified sequence, as
  # provided by the search engine
  #sequence: Sequence
  sequence: Modified sequence
  raw_file: Raw file
  retention_time: Retention time
  pep: PEP

  # optional columns, that would be used for filtering or figure generation
  leading_protein: Leading razor protein
  proteins: Proteins
  leading_gene: ~
  genes: ~
  retention_length: Retention length
  intensity: Intensity
  exclude: ~
  exp_id: ~
  peptide_id: ~

## Filters
## ==========================

# Filters are used to exclude certain observations (PSMs) from
# the alignment process.
# Remove filters from this list that you do not want to have.

filters:
  # Provide an exclusion list of UniProt IDs. Any PSM matching this
  # list will be filtered out
  # Either a file, with UniProt IDs separated by line breaks, can be
  # specified with the "file" field, or
  # a list of UniProt IDs can be provided in the "list" field
  - name: uniprot_exclusion
    file: /path/to/list_of_uniprot_ids.txt
    list:
      - or_you_could
      - list_uniprot_ids_here
      - P36578
      - Q99797

  # Filter out contaminants as marked by the search engine
  # The "tag" option is the pattern used to filter out PSMs
  - name: contaminant
    tag: CON__

  # Filter out decoys as marked by the search engine
  # The "tag" option is the pattern used to filter out PSMs
  - name: decoy
    tag: REV__

  # Filter out PSMs by the retention length, which is defined
  # by some search engines as the time at which this spectra is first
  # observed, to the time this spectra is last observed
  # 
  # If "dynamic" is set to true, then the threshold is a fraction of
  # the maximum RT for that raw file (i.e., the run-time). A value of 0.01
  # denotes that the threshold will be 1% of the total run-time of the experiment.
  - name: retention_length
    dynamic: true
    value: 0.01667

  # Filter out PSMs by PEP. The alignment model is built to accomodate for
  # low-confidence PSMs, but a PEP filter of above 0.5 is not recommended.
  - name: pep
    value: 0.5

  # Filter out PSMs by their RT ranges in each experiment. This behavior is
  # similar but not exactly the same as the "retention_length" filter.
  # 
  # If "dynamic" is set to true, then the threshold is a fraction of
  # the maximum RT for that raw file (i.e., the run-time). A value of 0.01
  # denotes that the threshold will be 1% of the total run-time of the experiment.
  - name: smears
    dynamic: true
    value: 0.03333

  # Filter out PSMs by the number of raw files the peptide has been observed in.
  # The alignment model will still work if the "value" is set to 1, but the
  # alignment process might take longer and have higher residuals than if these
  # observations were just filtered out.
  # 
  # NOTE: please put this last in the config file, as this step is designed
  #       to be run last
  - name: num_exps
    value: 3

